version: "3"

services:
  postgresdb:
    container_name: goRepositoryPattern_postgresdb
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${DB_DOCKER_HOST}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgresdb_data:/var/lib/postgresql/data
    networks:
      - goRepositoryPattern_network

  pgadmin:
    container_name: goRepositoryPattern_pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgresdb_data:/var/lib/postgresql/data
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - goRepositoryPattern_network

  redis:
        container_name: goRepositoryPattern_redis
        image: redis:latest
        ports:
            - '6332:6379'
        volumes:
            - ./other/redis:/data
            - goRepositoryPattern_redis_data:/data
        networks:
          - goRepositoryPattern_network

  # goRepositoryPattern_api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     # - "8000:8000"
  #     - "80:80"
  #   depends_on:
  #     - postgresdb
  #     # - redis
  #   networks:
  #     - goRepositoryPattern_network

networks:
  goRepositoryPattern_network:
    driver: bridge

volumes:
  postgresdb_data:
  goRepositoryPattern_api:
  goRepositoryPattern_redis_data:
